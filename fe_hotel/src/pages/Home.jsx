import React, { useEffect, useState } from 'react'
import Container from 'react-bootstrap/Container'
import Row from 'react-bootstrap/Row'
import Col from 'react-bootstrap/Col'
import AmenityCard from '../components/home/AmenityCard'
import RoomCard from '../components/home/RoomCard'
import RoomCarousel from '../components/home/RoomCarousel'
import HeroSearch from '../components/home/HeroSearch'
import Testimonials from '../components/home/Testimonials'
import axios from 'axios'

const amenities = [
  { title: 'WiFi mi·ªÖn ph√≠', desc: 'Internet t·ªëc ƒë·ªô cao to√†n b·ªô kh√°ch s·∫°n', icon: 'üì∂' },
  { title: 'B√£i ƒë·ªó xe', desc: 'R·ªông r√£i v√† an to√†n', icon: 'üöó' },
  { title: 'Nh√† h√†ng 5 sao', desc: '·∫®m th·ª±c ƒë·∫≥ng c·∫•p', icon: 'üçΩÔ∏è' },
  { title: 'H·ªì b∆°i', desc: 'Ngo√†i tr·ªùi, view ƒë·∫πp', icon: 'üèä' },
  { title: 'Ph√≤ng gym', desc: 'Thi·∫øt b·ªã hi·ªán ƒë·∫°i 24/7', icon: 'üèãÔ∏è' },
  { title: 'D·ªãch v·ª• ph√≤ng', desc: '24/7, th·ª±c ƒë∆°n ƒëa d·∫°ng', icon: '‚òï' },
]

export default function Home(){
  const [recommendedRooms, setRecommendedRooms] = useState([])
  const [popularRooms, setPopularRooms] = useState([])
  const [error, setError] = useState(null)
  const API_BASE = import.meta.env.VITE_API_BASE || 'http://localhost:8080/api'
  
  useEffect(()=>{
    // Load recommended rooms (personalized if logged in, otherwise auto)
    const accountId = localStorage.getItem('accountId') // Get from auth context if available
    const recommendParams = accountId 
      ? `?accountId=${accountId}&type=auto&limit=5`
      : '?type=auto&limit=5'
    
    axios.get(`${API_BASE}/rooms/recommend${recommendParams}`)
      .then(r => setRecommendedRooms(r.data || []))
      .catch(e => {
        console.error('Failed to load recommended rooms:', e)
        // Fallback to regular rooms list
        axios.get(`${API_BASE}/rooms`)
          .then(r => setRecommendedRooms((r.data || []).slice(0, 5)))
          .catch(err => setError(err.message))
      })

    // Load popular rooms for grid display
    axios.get(`${API_BASE}/rooms`)
      .then(r => setPopularRooms((r.data || []).slice(0, 3)))
      .catch(e => setError(e.message))
  }, [])

  return (
    <main>
      <HeroSearch />

      {/* Carousel g·ª£i √Ω ph√≤ng */}
      {recommendedRooms.length > 0 && (
        <RoomCarousel 
          rooms={recommendedRooms} 
          title="Ph√≤ng g·ª£i √Ω d√†nh cho b·∫°n" 
        />
      )}

      <Container className="py-5">
        <section id="amenities" className="py-4">
          <h2 className="fw-bold mb-4">Ti·ªán nghi ƒë·∫≥ng c·∫•p</h2>
          <Row className="g-4">
            {amenities.map((a, i)=> (
              <Col md={6} lg={4} key={i}><AmenityCard {...a} /></Col>
            ))}
          </Row>
        </section>

        <section id="rooms" className="py-4">
          <h2 className="fw-bold mb-4">Ph√≤ng ngh·ªâ sang tr·ªçng</h2>
          {error && <div className="alert alert-warning">{error}</div>}
          <Row className="g-4">
            {popularRooms.map(room => (
              <Col md={6} lg={4} key={room.id}><RoomCard room={room} /></Col>
            ))}
          </Row>
        </section>

        <Testimonials />
      </Container>
    </main>
  )
}
